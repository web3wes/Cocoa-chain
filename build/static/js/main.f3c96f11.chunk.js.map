{"version":3,"sources":["components/Navbar.js","components/Form.js","components/Main.js","components/App.js","serviceWorker.js","index.js"],"names":["Navbar","react_default","a","createElement","className","href","target","rel","id","this","props","account","width","height","src","concat","Identicon","toString","alt","Component","Form","_this","onSubmit","event","preventDefault","name","assetName","value","createAsset","type","ref","input","placeholder","required","STATUSES","Main","scope","status","custodian","contractAddress","onClick","recipient","window","prompt","sendAsset","receiveAsset","actions","map","action","key","returnValues","moment","unix","timestamp","format","App","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","loadAsset","asyncToGenerator","regenerator_default","mark","_callee5","contract","wrap","_context5","prev","next","web3","eth","Contract","Asset","abi","state","methods","sent","getPastEvents","fromBlock","toBlock","setState","stop","_ref2","_callee7","_context7","loading","deploy","data","bytecode","arguments","send","from","once","_ref3","_callee6","receipt","_context6","_x2","apply","_x","_ref4","_callee9","to","_context9","_ref5","_callee8","_context8","_x4","_x3","_callee11","_context11","receive","_ref7","_callee10","_context10","_x5","detectAsset","loadWeb3","loadBlockchainData","urlParams","URLSearchParams","location","search","address","get","ethereum","Web3","enable","currentProvider","alert","getAccounts","accounts","components_Main","components_Form","components_Navbar","role","renderContent","Boolean","hostname","match","ReactDOM","render","src_components_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.f3c96f11.chunk.js","sourcesContent":["import React, { Component } from 'react'\nimport Identicon from 'identicon.js';\n\nclass Navbar extends Component {\n\n  render() {\n    return (\n      <nav className=\"navbar navbar-dark fixed-top bg-dark flex-md-nowrap p-0 shadow\">\n        <a\n          className=\"navbar-brand col-sm-3 col-md-2 mr-0\"\n          href=\"https://github.com/web3wes\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Web3Wes Repo\n        </a>\n\n        <ul className=\"navbar-nav px-3\">\n          <li className=\"nav-item text-nowrap d-none d-sm-none d-sm-block\">\n            <small className=\"text-secondary\">\n              <small id=\"account\">{this.props.account}</small>\n            </small>\n\n            { this.props.account\n              ? <img\n                className=\"ml-2\"\n                width='30'\n                height='30'\n                src={`data:image/png;base64,${new Identicon(this.props.account, 30).toString()}`}\n                alt=\"\"\n              />\n              : <span></span>\n            }\n\n          </li>\n        </ul>\n      </nav>\n    );\n  }\n}\n\nexport default Navbar;\n","import React, { Component } from 'react';\n\nclass Form extends Component {\n\n  render() {\n    return (\n      <div id='content'>\n        <h1>Create Asset</h1>\n        <p>You must create a new asset before you can track it.</p>\n        <form onSubmit={(event) => {\n          event.preventDefault()\n          const name = this.assetName.value\n          this.props.createAsset(name)\n        }}>\n          <div className='form-group mr-sm-2'>\n            <input\n              id='assetName'\n              type='text'\n              ref={(input) => { this.assetName = input }}\n              className='form-control'\n              placeholder='Asset Name'\n              required />\n          </div>\n          <button type='submit' className='btn btn-primary'>Add Asset</button>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default Form;\n","import React, { Component } from 'react';\nimport moment from 'moment'\n\nconst STATUSES = ['CREATED', 'SENT', 'RECEIVED']\n\nclass Main extends Component {\n\n  render() {\n    return (\n      <div id='content'>\n        <h1>{this.props.name}</h1>\n        <table className='table'>\n          <thead>\n            <tr>\n              <th scope='col'>Status</th>\n              <th scope='col'>Custodian</th>\n              <th scope='col'>Actions</th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr>\n              <td>\n                <span className='badge badge-success'>{STATUSES[this.props.status]}</span>\n              </td>\n\n              <td className='text-muted'>\n                <small>{this.props.custodian}</small>\n              </td>\n              <td>\n                <a\n                  href={`http://localhost:3000?address=${this.props.contractAddress}`}\n                  target='_blank'\n                  rel='noopener noreferrer'\n                  className='btn btn-primary'\n                >\n                  Share\n                </a>\n                &nbsp;\n                <button\n                  className='btn btn-primary'\n                  onClick={() => {\n                    let recipient = window.prompt('Who would you like to send the asset to?')\n                    this.props.sendAsset(recipient)\n                  }}\n                >\n                  Send\n                </button>\n                &nbsp;\n                <button\n                  className='btn btn-primary'\n                  onClick={() => this.props.receiveAsset() } > \n                  Receive\n                </button>\n              </td>\n            </tr>\n          </tbody>\n        </table>\n        <h2>History</h2>\n        <table className='table'>\n          <thead>\n            <tr>\n              <th scope='col'>Event</th>\n              <th scope='col'>Time</th>\n              <th scope='col'>Account</th>\n              <th scope='col'>Custodian</th>\n            </tr>\n          </thead>\n          <tbody>\n            { this.props.actions.map((action, key) => {\n              return(\n                <tr key={key}>\n                  <td><span className='badge badge-dark'>{action.returnValues.name}</span></td>\n                  <td><small>{moment.unix(action.returnValues.timestamp).format()}</small></td>\n                  <td className='text-muted'><small>{action.returnValues.account}</small></td>\n                  <td className='text-muted'><small>{action.returnValues.custodian}</small></td>\n                </tr>\n              )\n            })}\n          </tbody>\n        </table>\n      </div>\n    );\n  }\n}\n\nexport default Main;\n","import React, { Component } from 'react';\nimport Web3 from 'web3'\nimport './App.css';\nimport Asset from '../artifacts/Asset.json'\nimport Navbar from './Navbar'\nimport Form from './Form'\nimport Main from './Main'\n\nclass App extends Component {\n\n  async componentWillMount() {\n    await this.detectAsset()\n    await this.loadWeb3()\n    await this.loadBlockchainData()\n  }\n\n  async detectAsset() {\n    const urlParams = new URLSearchParams(window.location.search)\n    const address = urlParams.get('address')\n    this.setState({ contractAddress: address })\n  }\n\n  async loadWeb3() {\n    if (window.ethereum) {\n      window.web3 = new Web3(window.ethereum)\n      await window.ethereum.enable()\n    }\n    else if (window.web3) {\n      window.web3 = new Web3(window.web3.currentProvider)\n    }\n    else {\n      window.alert('Non-Ethereum browser detected. You should consider trying MetaMask!')\n    }\n  }\n\n  async loadBlockchainData() {\n    const accounts = await window.web3.eth.getAccounts()\n    this.setState({ account: accounts[0] })\n    if(this.state.contractAddress) {\n      await this.loadAsset()\n    }\n    this.setState({ loading: false })\n  }\n\n  constructor(props) {\n    super(props)\n    this.state = {\n      account: '',\n      contractAddress: null,\n      contract: {},\n      name: '',\n      custodian: '',\n      actions: [],\n      loading: true\n    }\n  }\n\n  loadAsset = async () => {\n    const contract = new window.web3.eth.Contract(Asset.abi, this.state.contractAddress)\n    const name = await contract.methods.name().call()\n    const status = await contract.methods.status().call()\n    const custodian = await contract.methods.custodian().call()\n    const actions = await contract.getPastEvents('Action', { fromBlock: 0, toBlock: 'latest' } )\n\n    this.setState({\n      contract,\n      name,\n      status,\n      custodian,\n      actions\n    })\n  }\n\n  createAsset = async (name) => {\n    this.setState({ loading: true })\n    const contract = new window.web3.eth.Contract(Asset.abi)\n    contract.deploy({\n      data: Asset.bytecode,\n      arguments: [name]\n    })\n    .send({\n      from: this.state.account\n    }).once('receipt', async (receipt) => {\n      this.setState({ contractAddress: receipt.contractAddress })\n      await this.loadAsset()\n      this.setState({ loading: false })\n    })\n  }\n\n  sendAsset = async (to) => {\n    this.setState({ loading: true })\n    this.state.contract.methods.send(to).send({\n      from: this.state.account\n    }).once('receipt', async (receipt) => {\n      await this.loadAsset()\n      this.setState({ loading: false })\n    })\n  }\n\n  receiveAsset = async () => {\n    this.setState({ loading: true })\n    this.state.contract.methods.receive().send({\n      from: this.state.account\n    }).once('receipt', async (receipt) => {\n      await this.loadAsset()\n      this.setState({ loading: false })\n    })\n  }\n\n  renderContent() {\n    if(this.state.loading) {\n      return(\n        <div id='loader' className='text-center'>\n          <p className='text-center'>Loading...</p>\n        </div>\n      )\n    }\n\n    if(this.state.contractAddress) {\n      return(\n        <Main\n          name={this.state.name}\n          custodian={this.state.custodian}\n          status={this.state.status}\n          contractAddress={this.state.contractAddress}\n          actions={this.state.actions}\n          receiveAsset={this.receiveAsset}\n          sendAsset={this.sendAsset}\n        />\n      )\n    } else {\n      return(\n        <Form\n          createAsset={this.createAsset}\n        />\n      ) \n    }\n  }\n\n  render() {\n    return (\n      <div>\n        <Navbar account={this.state.account} />\n        <div className='container-fluid mt-5'>\n          <div className='row'>\n            <main role='main' className=\"col-lg-12 ml-auto mr-auto\">\n              {this.renderContent()}\n            </main>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.css'\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}